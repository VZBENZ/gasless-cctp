{
  "address": "0x290138D33Fb86d0E8484BF7C4b3952277d5fE4c6",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "contract ITokenMessenger",
          "name": "_tokenMessenger",
          "type": "address"
        },
        {
          "internalType": "contract IMessageTransmitter",
          "name": "_messageTransmitter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "maxFee",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "destinationDomain",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "receiveAuthorization",
          "type": "bytes"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "messageTransmitter",
      "outputs": [
        {
          "internalType": "contract IMessageTransmitter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenMessenger",
      "outputs": [
        {
          "internalType": "contract ITokenMessenger",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "attestation",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "receiveAuthorization",
          "type": "bytes"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x4b96aba64c8255dd9a8f20781ea040fdd95df5cc7892adadcec78f05ad88566f",
  "receipt": {
    "to": null,
    "from": "0x92e94967A976610D27267273935De71B791f0037",
    "contractAddress": "0x290138D33Fb86d0E8484BF7C4b3952277d5fE4c6",
    "transactionIndex": 4,
    "gasUsed": "1157387",
    "logsBloom": "0x
    "blockHash": "0x40cb0d668949913caf13e09ec4e9b7a65ab35b2acbc82746be15a75fcb03e197",
    "transactionHash": "0x4b96aba64c8255dd9a8f20781ea040fdd95df5cc7892adadcec78f05ad88566f",
    "logs": [],
    "blockNumber": 33736131,
    "cumulativeGasUsed": "1691641",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E",
    "0x6b25532e1060ce10cc3b0a99e5683b91bfde6982",
    "0x8186359af5f57fbb40c6b14a588d2a59c0c29880"
  ],
  "numDeployments": 2,
  "solcInputHash": "fbf2c2bc2bd43d3a5bcbc38720049424",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"contract ITokenMessenger\",\"name\":\"_tokenMessenger\",\"type\":\"address\"},{\"internalType\":\"contract IMessageTransmitter\",\"name\":\"_messageTransmitter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxFee\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"receiveAuthorization\",\"type\":\"bytes\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messageTransmitter\",\"outputs\":[{\"internalType\":\"contract IMessageTransmitter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenMessenger\",\"outputs\":[{\"internalType\":\"contract ITokenMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"attestation\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"receiveAuthorization\",\"type\":\"bytes\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Forwarder.sol\":\"Forwarder\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@gelatonetwork/relay-context/contracts/base/GelatoRelayBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.1;\\n\\nimport {GELATO_RELAY, GELATO_RELAY_ZKSYNC} from \\\"../constants/GelatoRelay.sol\\\";\\n\\nabstract contract GelatoRelayBase {\\n    modifier onlyGelatoRelay() {\\n        require(_isGelatoRelay(msg.sender), \\\"onlyGelatoRelay\\\");\\n        _;\\n    }\\n\\n    function _isGelatoRelay(address _forwarder) internal view returns (bool) {\\n        return\\n            block.chainid == 324 || block.chainid == 280\\n                ? _forwarder == GELATO_RELAY_ZKSYNC\\n                : _forwarder == GELATO_RELAY;\\n    }\\n}\\n\",\"keccak256\":\"0x033fece9013a13dfc2165c8b9f474d0da6363741314a726d670507443131d2ab\",\"license\":\"MIT\"},\"@gelatonetwork/relay-context/contracts/base/GelatoRelayERC2771Base.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.1;\\n\\nimport {\\n    GELATO_RELAY_ERC2771,\\n    GELATO_RELAY_ERC2771_ZKSYNC\\n} from \\\"../constants/GelatoRelay.sol\\\";\\n\\nabstract contract GelatoRelayERC2771Base {\\n    modifier onlyGelatoRelayERC2771() {\\n        require(_isGelatoRelayERC2771(msg.sender), \\\"onlyGelatoRelayERC2771\\\");\\n        _;\\n    }\\n\\n    function _isGelatoRelayERC2771(address _forwarder)\\n        internal\\n        view\\n        returns (bool)\\n    {\\n        // Use another address on zkSync\\n        if (block.chainid == 324 || block.chainid == 280) {\\n            return _forwarder == GELATO_RELAY_ERC2771_ZKSYNC;\\n        }\\n        return _forwarder == GELATO_RELAY_ERC2771;\\n    }\\n}\\n\",\"keccak256\":\"0x215b9061abf2a71ae3dc68acea61ac922dd5c0e9bd9a25bca06f1f28d43f5935\",\"license\":\"MIT\"},\"@gelatonetwork/relay-context/contracts/constants/GelatoRelay.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.1;\\n\\naddress constant GELATO_RELAY = 0xaBcC9b596420A9E9172FD5938620E265a0f9Df92;\\naddress constant GELATO_RELAY_ERC2771 = 0xb539068872230f20456CF38EC52EF2f91AF4AE49;\\n\\naddress constant GELATO_RELAY_ZKSYNC = 0xB16a1DbE755f992636705fDbb3A8678a657EB3ea;\\naddress constant GELATO_RELAY_ERC2771_ZKSYNC = 0x22DCC39b2AC376862183dd35A1664798dafC7Da6;\\n\",\"keccak256\":\"0x545518e60f19e6d57eedbc861b861321e9face2ec3fa095a539cb4f784ac4ab0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"contracts/Forwarder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.19;\\n\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport {ITokenMessenger} from \\\"./interfaces/ITokenMessenger.sol\\\";\\nimport {IMessageTransmitter} from \\\"./interfaces/IMessageTransmitter.sol\\\";\\nimport {GelatoRelayContext} from \\\"./vendor/GelatoRelayContext.sol\\\";\\n\\ncontract Forwarder is GelatoRelayContext {\\n    IERC20 public immutable token;\\n    ITokenMessenger public immutable tokenMessenger;\\n    IMessageTransmitter public immutable messageTransmitter;\\n\\n    constructor(\\n        IERC20 _token,\\n        ITokenMessenger _tokenMessenger,\\n        IMessageTransmitter _messageTransmitter\\n    ) {\\n        token = _token;\\n        tokenMessenger = _tokenMessenger;\\n        messageTransmitter = _messageTransmitter;\\n    }\\n\\n    function deposit(\\n        uint256 maxFee,\\n        uint32 destinationDomain,\\n        bytes calldata receiveAuthorization\\n    ) external onlyGelatoRelayERC2771 {\\n        _receiveWithAuthorization(receiveAuthorization);\\n        _transferRelayFeeCappedERC2771(maxFee);\\n\\n        bytes32 owner = abi.decode(receiveAuthorization, (bytes32));\\n        uint256 remaining = token.balanceOf(address(this));\\n\\n        token.approve(address(tokenMessenger), remaining);\\n\\n        tokenMessenger.depositForBurn(\\n            remaining,\\n            destinationDomain,\\n            owner,\\n            address(token)\\n        );\\n    }\\n\\n    function withdraw(\\n        bytes calldata message,\\n        bytes calldata attestation,\\n        bytes calldata receiveAuthorization\\n    ) external onlyGelatoRelay {\\n        messageTransmitter.receiveMessage(message, attestation);\\n\\n        _receiveWithAuthorization(receiveAuthorization);\\n        _transferRelayFee();\\n\\n        address owner = abi.decode(receiveAuthorization, (address));\\n        uint256 remaining = token.balanceOf(address(this));\\n\\n        token.transfer(owner, remaining);\\n    }\\n\\n    function _receiveWithAuthorization(bytes calldata authorization) internal {\\n        _requireCall(\\n            address(token),\\n            abi.encodePacked(bytes4(0xef55bec6), authorization)\\n        );\\n    }\\n\\n    function _requireCall(address target, bytes memory data) internal {\\n        (bool success, bytes memory result) = address(target).call(data);\\n        assembly {\\n            if eq(success, false) {\\n                revert(add(result, 32), mload(result))\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0cedbe0aa99423a4b61d1016b6ef6cfa94ef134ac93d9ef97798bea36ab0406e\",\"license\":\"MIT\"},\"contracts/interfaces/IMessageTransmitter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.19;\\r\\n\\r\\ninterface IMessageTransmitter {\\r\\n    function receiveMessage(\\r\\n        bytes calldata message,\\r\\n        bytes calldata attestation\\r\\n    ) external returns (bool success);\\r\\n}\\r\\n\",\"keccak256\":\"0x310ebefca0b0e6de21dd4f4cce758f97443ef46fbc9e249ee65273faebbee0a3\",\"license\":\"MIT\"},\"contracts/interfaces/ITokenMessenger.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.19;\\r\\n\\r\\ninterface ITokenMessenger {\\r\\n    function depositForBurn(\\r\\n        uint256 amount,\\r\\n        uint32 destinationDomain,\\r\\n        bytes32 mintRecipient,\\r\\n        address burnToken\\r\\n    ) external returns (uint64 nonce);\\r\\n}\\r\\n\",\"keccak256\":\"0x647e97803306830b8ffe81103778e1b503c140eb5145e2aca74ffed9e0ff89cc\",\"license\":\"MIT\"},\"contracts/vendor/GelatoRelayContext.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.19;\\r\\n\\r\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport {\\r\\n    GelatoRelayBase\\r\\n} from \\\"@gelatonetwork/relay-context/contracts/base/GelatoRelayBase.sol\\\";\\r\\nimport {\\r\\n    GelatoRelayERC2771Base\\r\\n} from \\\"@gelatonetwork/relay-context/contracts/base/GelatoRelayERC2771Base.sol\\\";\\r\\n\\r\\nuint256 constant _ERC2771_FEE_COLLECTOR_START = 92;\\r\\nuint256 constant _ERC2771_FEE_TOKEN_START = 72;\\r\\nuint256 constant _ERC2771_FEE_START = 52;\\r\\n\\r\\nuint256 constant _FEE_COLLECTOR_START = 72;\\r\\nuint256 constant _FEE_TOKEN_START = 52;\\r\\nuint256 constant _FEE_START = 32;\\r\\n\\r\\n// solhint-disable-next-line private-vars-leading-underscore\\r\\nfunction _getFeeCollectorRelayContextERC2771()\\r\\n    pure\\r\\n    returns (address feeCollector)\\r\\n{\\r\\n    assembly {\\r\\n        feeCollector := shr(\\r\\n            96,\\r\\n            calldataload(sub(calldatasize(), _ERC2771_FEE_COLLECTOR_START))\\r\\n        )\\r\\n    }\\r\\n}\\r\\n\\r\\n// solhint-disable-next-line private-vars-leading-underscore\\r\\nfunction _getFeeTokenRelayContextERC2771() pure returns (address feeToken) {\\r\\n    assembly {\\r\\n        feeToken := shr(96, calldataload(sub(calldatasize(), _ERC2771_FEE_TOKEN_START)))\\r\\n    }\\r\\n}\\r\\n\\r\\n// solhint-disable-next-line private-vars-leading-underscore\\r\\nfunction _getFeeRelayContextERC2771() pure returns (uint256 fee) {\\r\\n    assembly {\\r\\n        fee := calldataload(sub(calldatasize(), _ERC2771_FEE_START))\\r\\n    }\\r\\n}\\r\\n\\r\\n// solhint-disable-next-line private-vars-leading-underscore\\r\\nfunction _getFeeCollectorRelayContext() pure returns (address feeCollector) {\\r\\n    assembly {\\r\\n        feeCollector := shr(\\r\\n            96,\\r\\n            calldataload(sub(calldatasize(), _FEE_COLLECTOR_START))\\r\\n        )\\r\\n    }\\r\\n}\\r\\n\\r\\n// solhint-disable-next-line private-vars-leading-underscore\\r\\nfunction _getFeeTokenRelayContext() pure returns (address feeToken) {\\r\\n    assembly {\\r\\n        feeToken := shr(96, calldataload(sub(calldatasize(), _FEE_TOKEN_START)))\\r\\n    }\\r\\n}\\r\\n\\r\\n// solhint-disable-next-line private-vars-leading-underscore\\r\\nfunction _getFeeRelayContext() pure returns (uint256 fee) {\\r\\n    assembly {\\r\\n        fee := calldataload(sub(calldatasize(), _FEE_START))\\r\\n    }\\r\\n}\\r\\n\\r\\nabstract contract GelatoRelayContext is GelatoRelayBase, GelatoRelayERC2771Base {\\r\\n    function _transferRelayFee() internal {\\r\\n        _getFeeToken().transfer(_getFeeCollector(), _getFee());\\r\\n    }\\r\\n\\r\\n    function _transferRelayFeeERC2771() internal {\\r\\n        _getFeeTokenERC2771().transfer(_getFeeCollectorERC2771(), _getFeeERC2771());\\r\\n    }\\r\\n\\r\\n    function _transferRelayFeeCapped(uint256 maxFee) internal {\\r\\n        uint256 fee = _getFee();\\r\\n        require(\\r\\n            fee <= maxFee,\\r\\n            \\\"GelatoRelayContext._transferRelayFeeCapped: maxFee\\\"\\r\\n        );\\r\\n        _getFeeToken().transfer(_getFeeCollector(), fee);\\r\\n    }\\r\\n\\r\\n    function _transferRelayFeeCappedERC2771(uint256 maxFee) internal {\\r\\n        uint256 fee = _getFeeERC2771();\\r\\n        require(\\r\\n            fee <= maxFee,\\r\\n            \\\"GelatoRelayContext._transferRelayFeeCappedERC2771: maxFee\\\"\\r\\n        );\\r\\n        _getFeeTokenERC2771().transfer(_getFeeCollectorERC2771(), fee);\\r\\n    }\\r\\n\\r\\n    function _getFeeCollectorERC2771() internal pure returns (address) {\\r\\n        return _getFeeCollectorRelayContextERC2771();\\r\\n    }\\r\\n\\r\\n    function _getFeeTokenERC2771() internal pure returns (IERC20) {\\r\\n        return IERC20(_getFeeTokenRelayContextERC2771());\\r\\n    }\\r\\n\\r\\n    function _getFeeERC2771() internal pure returns (uint256) {\\r\\n        return _getFeeRelayContextERC2771();\\r\\n    }\\r\\n\\r\\n    function _getFeeCollector() internal pure returns (address) {\\r\\n        return _getFeeCollectorRelayContext();\\r\\n    }\\r\\n\\r\\n    function _getFeeToken() internal pure returns (IERC20) {\\r\\n        return IERC20(_getFeeTokenRelayContext());\\r\\n    }\\r\\n\\r\\n    function _getFee() internal pure returns (uint256) {\\r\\n        return _getFeeRelayContext();\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xa6f53dcf9c0187c1bfd9731bd22493a5df3da7f72c830a81f9f389a808968d92\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60e06040523480156200001157600080fd5b506040516200168f3803806200168f8339818101604052810190620000379190620001e4565b8273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff168152505050505062000240565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200010e82620000e1565b9050919050565b6000620001228262000101565b9050919050565b620001348162000115565b81146200014057600080fd5b50565b600081519050620001548162000129565b92915050565b6000620001678262000101565b9050919050565b62000179816200015a565b81146200018557600080fd5b50565b60008151905062000199816200016e565b92915050565b6000620001ac8262000101565b9050919050565b620001be816200019f565b8114620001ca57600080fd5b50565b600081519050620001de81620001b3565b92915050565b6000806000606084860312156200020057620001ff620000dc565b5b6000620002108682870162000143565b9350506020620002238682870162000188565b92505060406200023686828701620001cd565b9150509250925092565b60805160a05160c0516113e1620002ae60003960008181610114015261041601526000818160f00152818161028001526103030152600081816101a80152818161024401528181610342015281816104e00152818161057c0152818161062501526106f901526113e16000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063461178301461005c5780637b04c1811461007a5780639b94f9a114610098578063d0f48715146100b4578063fc0c546a146100d0575b600080fd5b6100646100ee565b6040516100719190610b1e565b60405180910390f35b610082610112565b60405161008f9190610b5a565b60405180910390f35b6100b260048036038101906100ad9190610c56565b610136565b005b6100ce60048036038101906100c99190610cca565b6103cc565b005b6100d8610623565b6040516100e59190610d9f565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b61013f33610647565b61017e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017590610e17565b60405180910390fd5b61018882826106f4565b6101918461074c565b600082828101906101a29190610e6d565b905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101ff9190610ebb565b602060405180830381865afa15801561021c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102409190610eeb565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000836040518363ffffffff1660e01b81526004016102bd929190610f27565b6020604051808303816000875af11580156102dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103009190610f88565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636fd3504e8287857f00000000000000000000000000000000000000000000000000000000000000006040518563ffffffff1660e01b81526004016103809493929190610fd3565b6020604051808303816000875af115801561039f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c39190611058565b50505050505050565b6103d53361082c565b610414576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040b906110d1565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166357ecfd28878787876040518563ffffffff1660e01b8152600401610473949392919061114f565b6020604051808303816000875af1158015610492573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b69190610f88565b506104c182826106f4565b6104c96108d6565b600082828101906104da91906111c8565b905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105379190610ebb565b602060405180830381865afa158015610554573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105789190610eeb565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016105d5929190610f27565b6020604051808303816000875af11580156105f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106189190610f88565b505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600061014446148061065a575061011846145b156106a9577322dcc39b2ac376862183dd35a1664798dafc7da673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161490506106ef565b73b539068872230f20456cf38ec52ef2f91af4ae4973ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161490505b919050565b6107487f000000000000000000000000000000000000000000000000000000000000000063ef55bec660e01b848460405160200161073493929190611272565b60405160208183030381529060405261096c565b5050565b60006107566109f1565b90508181111561079b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107929061130e565b60405180910390fd5b6107a3610a00565b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6107c6610a0f565b836040518363ffffffff1660e01b81526004016107e4929190610f27565b6020604051808303816000875af1158015610803573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108279190610f88565b505050565b600061014446148061083f575061011846145b61088b5773abcc9b596420a9e9172fd5938620e265a0f9df9273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146108cf565b73b16a1dbe755f992636705fdbb3a8678a657eb3ea73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b9050919050565b6108de610a1e565b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610901610a2d565b610909610a3c565b6040518363ffffffff1660e01b8152600401610926929190610f27565b6020604051808303816000875af1158015610945573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109699190610f88565b50565b6000808373ffffffffffffffffffffffffffffffffffffffff16836040516109949190611394565b6000604051808303816000865af19150503d80600081146109d1576040519150601f19603f3d011682016040523d82523d6000602084013e6109d6565b606091505b5091509150600082036109eb57805160208201fd5b50505050565b60006109fb610a4b565b905090565b6000610a0a610a57565b905090565b6000610a19610a66565b905090565b6000610a28610a75565b905090565b6000610a37610a84565b905090565b6000610a46610a93565b905090565b60006034360335905090565b6000604836033560601c905090565b6000605c36033560601c905090565b6000603436033560601c905090565b6000604836033560601c905090565b60006020360335905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610ae4610adf610ada84610a9f565b610abf565b610a9f565b9050919050565b6000610af682610ac9565b9050919050565b6000610b0882610aeb565b9050919050565b610b1881610afd565b82525050565b6000602082019050610b336000830184610b0f565b92915050565b6000610b4482610aeb565b9050919050565b610b5481610b39565b82525050565b6000602082019050610b6f6000830184610b4b565b92915050565b600080fd5b600080fd5b6000819050919050565b610b9281610b7f565b8114610b9d57600080fd5b50565b600081359050610baf81610b89565b92915050565b600063ffffffff82169050919050565b610bce81610bb5565b8114610bd957600080fd5b50565b600081359050610beb81610bc5565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610c1657610c15610bf1565b5b8235905067ffffffffffffffff811115610c3357610c32610bf6565b5b602083019150836001820283011115610c4f57610c4e610bfb565b5b9250929050565b60008060008060608587031215610c7057610c6f610b75565b5b6000610c7e87828801610ba0565b9450506020610c8f87828801610bdc565b935050604085013567ffffffffffffffff811115610cb057610caf610b7a565b5b610cbc87828801610c00565b925092505092959194509250565b60008060008060008060608789031215610ce757610ce6610b75565b5b600087013567ffffffffffffffff811115610d0557610d04610b7a565b5b610d1189828a01610c00565b9650965050602087013567ffffffffffffffff811115610d3457610d33610b7a565b5b610d4089828a01610c00565b9450945050604087013567ffffffffffffffff811115610d6357610d62610b7a565b5b610d6f89828a01610c00565b92509250509295509295509295565b6000610d8982610aeb565b9050919050565b610d9981610d7e565b82525050565b6000602082019050610db46000830184610d90565b92915050565b600082825260208201905092915050565b7f6f6e6c7947656c61746f52656c61794552433237373100000000000000000000600082015250565b6000610e01601683610dba565b9150610e0c82610dcb565b602082019050919050565b60006020820190508181036000830152610e3081610df4565b9050919050565b6000819050919050565b610e4a81610e37565b8114610e5557600080fd5b50565b600081359050610e6781610e41565b92915050565b600060208284031215610e8357610e82610b75565b5b6000610e9184828501610e58565b91505092915050565b6000610ea582610a9f565b9050919050565b610eb581610e9a565b82525050565b6000602082019050610ed06000830184610eac565b92915050565b600081519050610ee581610b89565b92915050565b600060208284031215610f0157610f00610b75565b5b6000610f0f84828501610ed6565b91505092915050565b610f2181610b7f565b82525050565b6000604082019050610f3c6000830185610eac565b610f496020830184610f18565b9392505050565b60008115159050919050565b610f6581610f50565b8114610f7057600080fd5b50565b600081519050610f8281610f5c565b92915050565b600060208284031215610f9e57610f9d610b75565b5b6000610fac84828501610f73565b91505092915050565b610fbe81610bb5565b82525050565b610fcd81610e37565b82525050565b6000608082019050610fe86000830187610f18565b610ff56020830186610fb5565b6110026040830185610fc4565b61100f6060830184610eac565b95945050505050565b600067ffffffffffffffff82169050919050565b61103581611018565b811461104057600080fd5b50565b6000815190506110528161102c565b92915050565b60006020828403121561106e5761106d610b75565b5b600061107c84828501611043565b91505092915050565b7f6f6e6c7947656c61746f52656c61790000000000000000000000000000000000600082015250565b60006110bb600f83610dba565b91506110c682611085565b602082019050919050565b600060208201905081810360008301526110ea816110ae565b9050919050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b600061112e83856110f1565b935061113b838584611102565b61114483611111565b840190509392505050565b6000604082019050818103600083015261116a818688611122565b9050818103602083015261117f818486611122565b905095945050505050565b600061119582610a9f565b9050919050565b6111a58161118a565b81146111b057600080fd5b50565b6000813590506111c28161119c565b92915050565b6000602082840312156111de576111dd610b75565b5b60006111ec848285016111b3565b91505092915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b61123c611237826111f5565b611221565b82525050565b600081905092915050565b60006112598385611242565b9350611266838584611102565b82840190509392505050565b600061127e828661122b565b60048201915061128f82848661124d565b9150819050949350505050565b7f47656c61746f52656c6179436f6e746578742e5f7472616e7366657252656c6160008201527f79466565436170706564455243323737313a206d617846656500000000000000602082015250565b60006112f8603983610dba565b91506113038261129c565b604082019050919050565b60006020820190508181036000830152611327816112eb565b9050919050565b600081519050919050565b60005b8381101561135757808201518184015260208101905061133c565b60008484015250505050565b600061136e8261132e565b6113788185611242565b9350611388818560208601611339565b80840191505092915050565b60006113a08284611363565b91508190509291505056fea2646970667358221220fe19e8e96093cd6bca414922c49098b9d7e6cc6da3831bd756151890eb39199864736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063461178301461005c5780637b04c1811461007a5780639b94f9a114610098578063d0f48715146100b4578063fc0c546a146100d0575b600080fd5b6100646100ee565b6040516100719190610b1e565b60405180910390f35b610082610112565b60405161008f9190610b5a565b60405180910390f35b6100b260048036038101906100ad9190610c56565b610136565b005b6100ce60048036038101906100c99190610cca565b6103cc565b005b6100d8610623565b6040516100e59190610d9f565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b61013f33610647565b61017e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017590610e17565b60405180910390fd5b61018882826106f4565b6101918461074c565b600082828101906101a29190610e6d565b905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101ff9190610ebb565b602060405180830381865afa15801561021c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102409190610eeb565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f0000000000000000000000000000000000000000000000000000000000000000836040518363ffffffff1660e01b81526004016102bd929190610f27565b6020604051808303816000875af11580156102dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103009190610f88565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636fd3504e8287857f00000000000000000000000000000000000000000000000000000000000000006040518563ffffffff1660e01b81526004016103809493929190610fd3565b6020604051808303816000875af115801561039f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c39190611058565b50505050505050565b6103d53361082c565b610414576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040b906110d1565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166357ecfd28878787876040518563ffffffff1660e01b8152600401610473949392919061114f565b6020604051808303816000875af1158015610492573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b69190610f88565b506104c182826106f4565b6104c96108d6565b600082828101906104da91906111c8565b905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105379190610ebb565b602060405180830381865afa158015610554573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105789190610eeb565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016105d5929190610f27565b6020604051808303816000875af11580156105f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106189190610f88565b505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600061014446148061065a575061011846145b156106a9577322dcc39b2ac376862183dd35a1664798dafc7da673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161490506106ef565b73b539068872230f20456cf38ec52ef2f91af4ae4973ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161490505b919050565b6107487f000000000000000000000000000000000000000000000000000000000000000063ef55bec660e01b848460405160200161073493929190611272565b60405160208183030381529060405261096c565b5050565b60006107566109f1565b90508181111561079b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107929061130e565b60405180910390fd5b6107a3610a00565b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6107c6610a0f565b836040518363ffffffff1660e01b81526004016107e4929190610f27565b6020604051808303816000875af1158015610803573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108279190610f88565b505050565b600061014446148061083f575061011846145b61088b5773abcc9b596420a9e9172fd5938620e265a0f9df9273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146108cf565b73b16a1dbe755f992636705fdbb3a8678a657eb3ea73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b9050919050565b6108de610a1e565b73ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610901610a2d565b610909610a3c565b6040518363ffffffff1660e01b8152600401610926929190610f27565b6020604051808303816000875af1158015610945573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109699190610f88565b50565b6000808373ffffffffffffffffffffffffffffffffffffffff16836040516109949190611394565b6000604051808303816000865af19150503d80600081146109d1576040519150601f19603f3d011682016040523d82523d6000602084013e6109d6565b606091505b5091509150600082036109eb57805160208201fd5b50505050565b60006109fb610a4b565b905090565b6000610a0a610a57565b905090565b6000610a19610a66565b905090565b6000610a28610a75565b905090565b6000610a37610a84565b905090565b6000610a46610a93565b905090565b60006034360335905090565b6000604836033560601c905090565b6000605c36033560601c905090565b6000603436033560601c905090565b6000604836033560601c905090565b60006020360335905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610ae4610adf610ada84610a9f565b610abf565b610a9f565b9050919050565b6000610af682610ac9565b9050919050565b6000610b0882610aeb565b9050919050565b610b1881610afd565b82525050565b6000602082019050610b336000830184610b0f565b92915050565b6000610b4482610aeb565b9050919050565b610b5481610b39565b82525050565b6000602082019050610b6f6000830184610b4b565b92915050565b600080fd5b600080fd5b6000819050919050565b610b9281610b7f565b8114610b9d57600080fd5b50565b600081359050610baf81610b89565b92915050565b600063ffffffff82169050919050565b610bce81610bb5565b8114610bd957600080fd5b50565b600081359050610beb81610bc5565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610c1657610c15610bf1565b5b8235905067ffffffffffffffff811115610c3357610c32610bf6565b5b602083019150836001820283011115610c4f57610c4e610bfb565b5b9250929050565b60008060008060608587031215610c7057610c6f610b75565b5b6000610c7e87828801610ba0565b9450506020610c8f87828801610bdc565b935050604085013567ffffffffffffffff811115610cb057610caf610b7a565b5b610cbc87828801610c00565b925092505092959194509250565b60008060008060008060608789031215610ce757610ce6610b75565b5b600087013567ffffffffffffffff811115610d0557610d04610b7a565b5b610d1189828a01610c00565b9650965050602087013567ffffffffffffffff811115610d3457610d33610b7a565b5b610d4089828a01610c00565b9450945050604087013567ffffffffffffffff811115610d6357610d62610b7a565b5b610d6f89828a01610c00565b92509250509295509295509295565b6000610d8982610aeb565b9050919050565b610d9981610d7e565b82525050565b6000602082019050610db46000830184610d90565b92915050565b600082825260208201905092915050565b7f6f6e6c7947656c61746f52656c61794552433237373100000000000000000000600082015250565b6000610e01601683610dba565b9150610e0c82610dcb565b602082019050919050565b60006020820190508181036000830152610e3081610df4565b9050919050565b6000819050919050565b610e4a81610e37565b8114610e5557600080fd5b50565b600081359050610e6781610e41565b92915050565b600060208284031215610e8357610e82610b75565b5b6000610e9184828501610e58565b91505092915050565b6000610ea582610a9f565b9050919050565b610eb581610e9a565b82525050565b6000602082019050610ed06000830184610eac565b92915050565b600081519050610ee581610b89565b92915050565b600060208284031215610f0157610f00610b75565b5b6000610f0f84828501610ed6565b91505092915050565b610f2181610b7f565b82525050565b6000604082019050610f3c6000830185610eac565b610f496020830184610f18565b9392505050565b60008115159050919050565b610f6581610f50565b8114610f7057600080fd5b50565b600081519050610f8281610f5c565b92915050565b600060208284031215610f9e57610f9d610b75565b5b6000610fac84828501610f73565b91505092915050565b610fbe81610bb5565b82525050565b610fcd81610e37565b82525050565b6000608082019050610fe86000830187610f18565b610ff56020830186610fb5565b6110026040830185610fc4565b61100f6060830184610eac565b95945050505050565b600067ffffffffffffffff82169050919050565b61103581611018565b811461104057600080fd5b50565b6000815190506110528161102c565b92915050565b60006020828403121561106e5761106d610b75565b5b600061107c84828501611043565b91505092915050565b7f6f6e6c7947656c61746f52656c61790000000000000000000000000000000000600082015250565b60006110bb600f83610dba565b91506110c682611085565b602082019050919050565b600060208201905081810360008301526110ea816110ae565b9050919050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b600061112e83856110f1565b935061113b838584611102565b61114483611111565b840190509392505050565b6000604082019050818103600083015261116a818688611122565b9050818103602083015261117f818486611122565b905095945050505050565b600061119582610a9f565b9050919050565b6111a58161118a565b81146111b057600080fd5b50565b6000813590506111c28161119c565b92915050565b6000602082840312156111de576111dd610b75565b5b60006111ec848285016111b3565b91505092915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b61123c611237826111f5565b611221565b82525050565b600081905092915050565b60006112598385611242565b9350611266838584611102565b82840190509392505050565b600061127e828661122b565b60048201915061128f82848661124d565b9150819050949350505050565b7f47656c61746f52656c6179436f6e746578742e5f7472616e7366657252656c6160008201527f79466565436170706564455243323737313a206d617846656500000000000000602082015250565b60006112f8603983610dba565b91506113038261129c565b604082019050919050565b60006020820190508181036000830152611327816112eb565b9050919050565b600081519050919050565b60005b8381101561135757808201518184015260208101905061133c565b60008484015250505050565b600061136e8261132e565b6113788185611242565b9350611388818560208601611339565b80840191505092915050565b60006113a08284611363565b91508190509291505056fea2646970667358221220fe19e8e96093cd6bca414922c49098b9d7e6cc6da3831bd756151890eb39199864736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}
